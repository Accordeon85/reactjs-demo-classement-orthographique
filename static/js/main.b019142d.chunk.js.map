{"version":3,"sources":["words.js","App.js","reportWebVitals.js","index.js"],"names":["words","menuSyllables","value","label","formattedWords","Object","entries","highlightSyllable","word","syllable","splitedWord","split","className","accentSyllable","altSyllables","result","forEach","element","includes","renderWords","common","proper","commonList","map","cw","properList","pw","GridSelectedWords","props","Grid","container","spacing","selectedWords","o","i","item","xs","alt","App","useState","selectedSyllable","updateSyllable","updateSelectedWords","options","controlClassName","onChange","event","newWords","placeholder","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAAaA,G,MAAQ,CACnB,IAAO,CACL,KAAQ,CAAC,OAAU,CAAC,UAAW,cAAe,UAAW,YAAa,YAAa,gBAAiB,WAAY,eAChH,KAAQ,CAAC,OAAU,CAAC,UACpB,IAAO,CACL,OAAU,CACR,SACA,YACA,UACA,YACA,aACA,UACA,eACA,QACA,aACA,cACA,aACA,aACA,aACA,UACA,cACA,QACA,aACA,YACA,OACA,gBACA,QACA,OACA,YACA,WACA,SACA,YACA,WACA,aACA,aACA,cAEF,OAAU,CAAC,UAAW,aAAW,YACjC,IAAQ,CAAC,WACX,IAAO,CAAC,OAAU,CAAC,cAAY,gBAEjC,IAAO,CACL,KAAQ,CACN,OAAU,CAAC,aAAc,UAAW,UAAW,WAAY,eAAgB,eAAgB,YAAa,eAAa,aACrH,OAAU,CAAC,gBACb,KAAQ,CACN,OAAU,CAAC,QAAS,UAEtB,SAAO,CACL,OAAU,CACR,eACA,eACA,YACA,iBACA,qBACA,aACA,YACA,YACA,YACA,WACA,cACA,cACA,WACA,WACA,YACA,kBACA,iBACA,YACA,oBACA,YACA,eACA,cACF,OAAU,CAAC,UAAQ,WAAS,kBAC5B,IAAO,CAAC,MAAO,WAEjB,IAAO,CACL,OAAU,CAAC,gBACX,IAAO,CAAC,SAAO,SAGnB,IAAO,CACL,KAAQ,CACN,OAAU,CACR,UACA,WACA,YACA,kBACA,eACA,YACA,YACA,aACA,gBACA,YACA,UACA,YACA,aACA,aAGJ,KAAQ,CAAE,OAAU,CAAC,WACrB,IAAQ,CACN,OAAU,CACR,QACA,YACA,WACA,SACA,aACA,YACA,YACA,eACA,YACA,WACA,SACA,SACA,eACA,YACA,cACA,eACA,eACA,cACA,YACA,aACA,YACA,iBACA,qBACA,iBACA,kBACA,aACA,oBACA,eACA,gBACA,WACA,WACA,cACA,YACA,eACA,YACA,eACA,aACA,SACA,YACA,sBACA,cACA,eACA,cACA,aACA,kBAGF,OAAU,CAAE,QAAS,YAAa,aAAc,UAChD,IAAO,CAAC,QAEV,IAAO,CACL,OAAU,CAAC,UAAW,aAAc,aAAc,UAAW,aAAc,eAAgB,aAC3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","file":"static/js/main.b019142d.chunk.js","sourcesContent":["export const words = {\n  'oli': {\n    'olli': {'common': ['collier', 'collimateur', 'colline', 'collision', 'follicule', 'pollinisateur', 'ramollir', 'solliciter']},\n    'olly': {'proper': ['Molly']},\n    'oli': {\n      'common': [\n        'abolir', \n        'acoolisme',\n        'brocoli',\n        'bucolique',\n        'catholique',\n        'colibri',\n        'colimaçon',\n        'colis', \n        'colisée',\n        'cosmopolite',\n        'démolir',\n        'diabolique',\n        'écolier',\n        'embolie',\n        'éolienne',\n        'folie',\n        'geôlier', \n        'gondolier', \n        'joli', \n        'mélancolie', \n        'olive', \n        'poli', \n        'politique',\n        'scoliose',\n        'solide', \n        'soliloque', \n        'solitude', \n        'symbolique',\n        'torticolis',\n        'volière'\n      ],\n      'proper': ['Bolivie', 'Molière', 'Mongolie'],\n      'alt' : ['ôli']},\n    'oly': {'common': ['polymère', 'polyvalent']}\n  },\n  'eli': {\n    'elli': {\n      'common': ['belliqueux', 'cellier', 'ellipse', 'embellir', 'intelligible', 'intelligence', 'pellicule', 'rébellion', 'satellite'],\n      'proper': ['Montpellier']},\n    'elly': {\n      'proper': ['Kelly', 'Nelly']\n    },\n    'éli': {\n      'common': [\n        'améliorer', \n        'angélique', \n        'bélier', \n        'célibataire', \n        'délibération', \n        'délicat', \n        'délice', \n        'délier', \n        'délire',\n        'délit',\n        'délivrer',\n        'éliminer',\n        'élire',\n        'élite',\n        'élixir',\n        'félicitation',\n        'fidélité',\n        'hélice',\n        'héliocentrique',\n        'hélium',\n        'obélisque',\n        'pélican'],\n      'proper': ['Élie', 'Élise', 'Montbéliard'],\n      'alt': ['eli', 'Éli']\n    },\n    'ely': {\n      'proper': ['Élysée'],\n      'alt': ['Ély', 'ely']\n    }\n  },\n  'ali': {\n    'alli': {\n      'common': [\n        'alliage',\n        'alliance',\n        'alligator',\n        'allitération',\n        'calligraphie',\n        'callipyge',\n        'corallien',\n        'cristallin',\n        'métallique',\n        'palliatif',\n        'pallier',\n        'phallique',\n        'ralliement',\n        'thallium',\n      ]\n    },\n    'ally': { 'common': ['rallye']},\n    'ali' : {\n      'common': [\n        'alien',\n        'animalier',\n        'anomalie',\n        'balise',\n        'balistique',\n        'baliverne',\n        'banaliser',\n        'brutalité',\n        'buraliste',\n        'calibrer',\n        'calice',\n        'calife',\n        'califourchon',\n        'canaliser',\n        'capitalisme',\n        'causalité',\n        'cavalière',\n        'centraliser',\n        'chevalier',\n        'chrysalide',\n        'coalition',\n        'commercialiser',\n        'confidentialité',\n        'contextualiser',\n        'convivialité',\n        'dualité',\n        'délocalisation',\n        'dévaliser',\n        'égalité',\n        'escalier',\n        'espalier',\n        'fatalité',\n        'finaliste',\n        'fiscalité',\n        'focaliser',\n        'formalité',\n        'frontalier',\n        'galion',\n        'galipette',\n        'généralité',\n        'hospitalier',\n        'idéaliste',\n        'initialiser',\n        'journalier',\n        'nationalité'\n\n      ],\n      'proper': [ 'Alice', 'Australie', 'Californie', 'Galice'],\n      'alt': ['Ali']\n    },\n    'aly': {\n      'common': ['analyse', 'apocalypse', 'catalyseur', 'dialyse', 'eucalyptus', 'paralympique', 'paralyser'],\n      'proper': ['Calypso'],\n      'alt': ['Aly']\n    }\n  },\n  'ole': {\n    'olle': {\n      'common': ['colle', 'collection', 'collège', 'collet', 'folle', 'follet', 'girolle', 'grolle', 'molle', 'mollet', 'roller', 'tollé', 'troller', 'volley'],\n      'alt': ['ollè', 'ollé']\n    },\n    'aulle': {\n      'common': [],\n      'proper': ['Charles de Gaulle']\n    },\n    'ole': {\n      'common': [\n        'accoler',\n        'acropole',\n        'adolescence',\n        'affoler',\n        'agricole',\n        'alvéole',\n        'auréole',\n        'babiole',\n        'bagnole',\n        'batifoler',\n        'bolet',\n        'boussole',\n        'bricoler',\n        'bénévole',\n        'cabriolet',\n        'cajole',\n        'cambrioler',\n        'camisole',\n        'caracole',\n        'casserole',\n        'contrôle',\n        'console',\n        'coupole',\n        'créole',\n        'dégringoler',\n        'drôle',\n        'école',\n        'enjôleur',\n        'farandole',\n        'faribole',\n        'fignoler',\n        'fiole',\n        'flageolet',\n        'frivole',\n        'frôler',\n        'gondole',\n        'hyperbole',\n        'idole',\n        'immoler',\n        'insolence',\n        'isoler',\n        'luciole',\n        'métropole',\n        'molette',\n        'obole',\n        'pactole',\n        'pôle',\n        'protocole',\n        'pétrole',\n        'racoleur',\n        'raffoler',\n        'rafistoler',\n        'rigoler',\n        'rissoler',\n        'rocambolesque',\n        'rôle',\n        'rougeole',\n        'soleil',\n        'solennel',\n        'somnolence',\n        'tôle',\n        'torgnole',\n        'triolet',\n        'variole',\n        'vérole',\n        'violence',\n        'violet',\n        'voler',\n        'volet',\n        'yole'\n      ],\n      'alt': ['ôle']\n    },\n    'aule': {\n      'common': ['épaule', 'gaule', 'miauler', 'piaule', 'saule', 'taule'],\n      'proper': ['La Gaule']\n    }\n  }\n}","import React, { Fragment, useState } from 'react';\nimport './App.css';\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css'\nimport { words } from './words'\nimport Grid from '@material-ui/core/Grid'\n\nconst menuSyllables = [\n  { value : 'oli', label : 'oli/olli/oly/olly' },\n  { value : 'eli', label : 'eli/elli/ely/elly' },\n  { value : 'ali', label : 'ali/alli/aly/ally' },\n  { value : 'ole', label : 'ole/olle/aule/aulle' }\n]\n\nconst formattedWords = Object.entries(words[menuSyllables[0].value])\n\nconst highlightSyllable = (word, syllable) => {\n  const splitedWord = word.split(syllable)\n  return (<>{splitedWord[0]}<span className=\"hightlight\">{syllable}</span>{splitedWord[1]}</>)\n}\n\nconst accentSyllable = (word, syllable, altSyllables) => {\n  let result = syllable\n  if(altSyllables) {\n    altSyllables.forEach(element => {\n      if(word.includes(element)) {\n        result = element\n      }\n    })\n  }\n  return result\n}\n\nconst renderWords = (common, proper, syllable, altSyllables) => {\n  const commonList = common ? <> { \n    common.map(cw => \n      <div className=\"word\" key={cw} > { \n          highlightSyllable(cw, accentSyllable(cw, syllable, altSyllables)) \n        } </div>) \n    } </> : <></>\n  const properList = proper ? <> { \n    proper.map(pw => <div className=\"properName\" key={pw}> { highlightSyllable(pw, accentSyllable(pw, syllable, altSyllables)) } </div>) \n    } </> : <></>\n  return (\n    <Fragment>\n      <div className=\"wordsList\">\n        { commonList }\n        { properList }\n      </div>\n    </Fragment>\n  )\n}\n\nconst GridSelectedWords = props => {\n  return (\n    <Grid container className=\"gridBlockList\" spacing={3}>\n      { props.selectedWords.map((o,i) =>\n        <>\n          <Grid item xs={6} className=\"gridWordsBlock\" key={o+i}>\n            <div className=\"legendSyllable\">{o[0]}</div>\n            <div>{ renderWords(o[1].common, o[1].proper, o[0], o[1].alt) }</div>\n          </Grid>\n        </>) \n      }\n    </Grid>)\n}\n\nfunction App() {\n  let [selectedSyllable, updateSyllable] = useState(menuSyllables[0])\n  let [selectedWords, updateSelectedWords] = useState(formattedWords)\n\n  const handleSelectedSyllable = (event) => {\n    const syllable = event.value\n    updateSyllable(syllable)\n    const newWords = Object.entries(words[syllable])\n    updateSelectedWords([...newWords])\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='leftMenu'>\n        <div className=\"syllableControl\">\n          <div className='labelTitle'>Syllabe</div>\n          <Dropdown options={menuSyllables} value={selectedSyllable}\n            controlClassName='dropdown'\n            className='dropdownroot'\n            onChange={handleSelectedSyllable} placeholder=\"Select an option\" />\n          <div className='rmq'>NB : ces listes ne sont pas exhaustives</div>\n        </div>\n        \n        <span className=\"separator\"></span>\n        <div className=\"externalContent\">\n          <div className='labelTitle'>Liens externes</div>\n          <a href=\"http://lexique.org\">lexique.org</a>\n        </div>\n      </div>\n      <div className=\"wordBoard\">\n        <div className=\"legend\">\n          <span className=\"legendElement\">Noms communs, verbes, adjectifs, adverbes</span>\n          <span className=\"legendElement properName\">Noms propres</span>\n        </div>\n\n        {/* <div className=\"wordsBlockList\">\n          { selectedWords.map((o,i) =>\n            <>\n              <div className=\"wordsBlock\" key={o+i}>\n                <div className=\"legendSyllable\">{o[0]}</div>\n                <div>{ renderWords(o[1].common, o[1].proper, o[0], o[1].alt) }</div>\n              </div>\n            </>) \n          }\n        </div> */}\n\n      <GridSelectedWords selectedWords={selectedWords}/>\n\n      </div>\n      <div>\n        <table>\n          \n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}